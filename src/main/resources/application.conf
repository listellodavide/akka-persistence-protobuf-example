#################################################
# Akka Persistence Extension Configuration File #
#################################################

# Persistence over Postgresql DBMS Server
#akka.persistence {
#    max-concurrent-recoveries = 50
#    internal-stash-overflow-strategy = "akka.persistence.ThrowExceptionConfigurator"
#    journal.plugin = "pg-journal"
#    snapshot-store.plugin = "pg-snapshot"
#}

# USE THIS FOR TESTING ONLY - NOT FOR PRODUCTION !!
# Persistence over Java LevelDB Embedded DB
akka.persistence.journal.plugin = "akka.persistence.journal.leveldb"
akka.persistence.snapshot-store.plugin = "akka.persistence.snapshot-store.local"
akka.persistence.journal.leveldb.dir = "target/example/journal"
akka.persistence.snapshot-store.local.dir = "target/example/snapshots"
akka.persistence.journal.leveldb.native = false

akka.actor {
  serializers {
    akka-persistence-message = "akka.persistence.serialization.MessageSerializer"
    akka-persistence-snapshot = "akka.persistence.serialization.SnapshotSerializer"
    protobuf = "io.adiwave.akka.persistenceprotobuf.utils.ProtobufSerializer"
  }
  serialization-bindings {
    "akka.persistence.serialization.Message" = akka-persistence-message
    "akka.persistence.serialization.Snapshot" = akka-persistence-snapshot
    "io.adiwave.akka.persistenceprotobuf.actors.GarageActor$GarageEvt" = protobuf
    "java.io.serializable" = none
  }
  serialization-identifiers {
    "akka.persistence.serialization.MessageSerializer" = 7
    "akka.persistence.serialization.SnapshotSerializer" = 8
  }
}

pg-persistence {
  db {
    user = "${env.user}"
    password = "${env.pass}"
    url = "jdbc:postgresql://localhost:5432/${env.dbname}"
  }
}